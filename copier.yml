---
!include ./config.*.yml
---
_min_copier_version: "9.5.0"

_message_before_copy: |
  Thanks for generating a project using our template.

  You'll be asked a series of questions whose answers will be used to
  generate a tailored project for you.

_message_after_copy: |
  To start working on your project, run:

      bun start

_subdirectory: template

_jinja_extensions:
  - jinja2_slug.SlugExtension

_skip_if_exists:
  - eslint.config.ts
  - .env.production
  - .env.staging
  - .env.development
  - gel/default.gel
  - package.json

_tasks:
  # - command: powershell -c "irm https://moonrepo.dev/install/proto.ps1 | iex"
  #   when: "{{ _copier_conf.os == 'windows' }}"

  # - command: echo "Provide the OneDrive folder when using OneDrive for Documents syncing"
  #   when: "{{ _copier_conf.os == 'windows' }}"

  # - command: powershell -c "$env:USERPROFILE\\.proto\\bin\\proto.exe setup"
  #   when: "{{ _copier_conf.os == 'windows' }}"

  # - command: powershell -c "irm https://moonrepo.dev/install/moon.ps1 | iex"
  #   when: "{{ _copier_conf.os == 'windows' }}"

  - command:
      - powershell
      - -c
      - >-
        "$(iwr https://www.geldata.com/ps1 -useb)".Replace("--no-wait-for-exit-prompt", "--no-wait-for-exit-prompt -y -q") | iex
    when: "{{ database == 'gel' and _copier_conf.os == 'windows' }}"

  - command: gel cli upgrade --to-nightly
    when: "{{ database == 'gel' and _copier_conf.os == 'windows' }}"

  - git init --initial-branch={{ default_branch }}

  - command: >-
      {{ frontend_toolchain }} add -d
      @types/{{ frontend_toolchain }}
      @ltd/j-toml
      touch
      @types/touch
      mkdirp
      rimraf
      chokidar
      minimatch
      ignore
      yaml
      cross-env
      jiti
      eslint
      @eslint/compat
      @eslint/markdown
      globals
      prettier
      typescript-eslint
      eslint-plugin-prettier
      eslint-config-prettier
      eslint-plugin-unused-imports
      eslint-plugin-only-warn
      @trivago/prettier-plugin-sort-imports
      @stylistic/eslint-plugin-ts
      @stylistic/eslint-plugin-js
      eslint-plugin-jsonc
      eslint-plugin-yml
      eslint-plugin-toml

  - command: >-
      {{ frontend_toolchain }} add -d
      stylelint
      stylelint-prettier
      @happy-dom/global-registrator
    when: "{{ frontend != 'skip' or storybook }}"

  - command: >-
      {{ frontend_toolchain }} add -d
      @angular-eslint/eslint-plugin
      @angular-eslint/eslint-plugin-template
      typescript
      @angular/cli
      @angular/compiler-cli
      @angular-devkit/build-angular
      ng-packagr
      && {{ frontend_toolchain }} add
      @angular/animations
      @angular/common
      @angular/compiler
      @angular/core
      @angular/forms
      @angular/platform-browser
      @angular/platform-browser-dynamic
      @angular/router
      @angular/service-worker
      rxjs
      tslib
      @ng-icons/core
    when: "{{ frontend == 'angular' }}"

  - command: >-
      {{ frontend_toolchain }} add -d
      postcss
      postcss-preset-env
      postcss-nesting
      postcss-advanced-variables
      postcss-custom-media
      postcss-custom-selectors
      @csstools/postcss-nested-calc
      @csstools/postcss-conditional-values
      cssnano
      cssnano-preset-advanced
      stylelint-config-standard
    when: "{{ frontend_style_language == 'css' }}"

  - command: >-
      {{ frontend_toolchain }} add -d
      stylelint-config-standard-scss
    when: "{{ frontend_style_language == 'scss' }}"

  - command: >-
      {{ frontend_toolchain }} add -d
      tailwindcss
      @tailwindcss/postcss
      stylelint-config-tailwindcss
    when: "{{ frontend_style_framework == 'tailwind' }}"

  # https://storybook.js.org/docs/configure/integration/frameworks-feature-support
  - command: >-
      {{ frontend_toolchain }} add -d
      @storybook/angular
      @storybook/addon-essentials
      @storybook/addon-interactions
      @storybook/addon-themes
      @storybook/addon-a11y
      @storybook/test-runner
      @storybook/test
      @compodoc/compodoc
      msw-storybook-addon
      msw
      eslint-plugin-storybook
      @storybook/react-vite
      @storybook/builder-vite
      vite
    when: "{{ storybook }}"

  - command: moon generate rust-package --force -- --name=initd --type=configuration --preset=initd
    when: "{{ backend == 'rust' and backend_type == 'app' }}"

  # TODO: remove BEGIN
  # - command: moon generate rust-package --force -- --name=common --type=library
  #   when: "{{ backend == 'rust' and backend_type == 'app' }}"

  # - command: moon generate rust-package --force -- --name=server --type=application --preset=axum
  #   when: "{{ backend == 'rust' and backend_type == 'app' }}"

  # - command: moon generate rust-package --force -- --name=task-runner --type=application
  #   when: "{{ backend == 'rust' and backend_type == 'app' }}"

  # - command: moon generate rust-package --force -- --name=assembly --type=library --preset=wasm
  #   when: "{{ backend == 'rust' and backend_type == 'app' }}"

  # - command: moon generate angular-lib --force -- --name=common
  #   when: "{{ frontend == 'angular' }}"

  # - command: moon generate angular-app --force -- --name=app --service_worker
  #   when: "{{ frontend == 'angular' }}"

  # - command: moon generate angular-storybook --force
  #   working_directory: angular/app
  #   when: "{{ frontend == 'angular' }}"

  # - command: moon generate angular-storybook --force
  #   working_directory: angular/common
  #   when: "{{ frontend == 'angular' }}"
  # TODO: remove END

  - >-
    git log --pretty=format:"%H" -n 1
    || (git add . && (git diff-index --quiet HEAD || git commit -m "Initial commit"))

  - moon clean --lifetime 0ms
  - moon wizard:sync
  - moon :format

  - >-
    git add . && (git diff-index --quiet HEAD || git commit -m "chore: update project")

  # TODO ONLY ON UPGRADE
  # - command: "{{ frontend_toolchain }} install --force --no-frozen-lockfile"
  #   when: "{{ frontend != 'skip' }}"
