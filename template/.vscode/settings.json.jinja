{
    "editor.rulers": [{{ line_width }}],
    "[typescript][javascript][yaml][json][jsonc][toml]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.eslint": "explicit"
        }
    },

    "css.validate": false,
    "less.validate": false,
    "scss.validate": false,
    "stylelint.validate": ["scss", "css", "postcss", "tailwindcss"],
    "[scss][css][postcss][tailwindcss]": {
        "editor.defaultFormatter": "stylelint.vscode-stylelint",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.stylelint": "explicit"
        }
    },
    "[html]": {
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.fixAll.stylelint": "explicit"
        }
    },

    "eslint.enable": true,
    "eslint.format.enable": true,
    "eslint.lintTask.enable": true,
    "eslint.packageManager": "{{ frontend_toolchain }}",
    "eslint.probe": [
      "typescript",
      "typescriptreact",
      "html",
      "mdx",
      "markdown",
      "json",
      "jsonc",
      "toml",
      "yaml"
    ],
    "eslint.validate": [
      "typescript",
      "typescriptreact",
      "html",
      "mdx",
      "markdown",
      "json",
      "jsonc",
      "toml",
      "yaml"
    ],

    "material-icon-theme.files.associations": {
        "*.gel": "gel",
        "*.gel": "gel",
        "*.tera": "tera",
        "*.state.ts": "angular-resolver",
        "*.prompt.ts": "angular-interceptor",
        "*.nav.ts": "routing",
        "*.breadcrumb.ts": "routing",
        "tsconfig.cli.json": "tsconfig",
        "tsconfig.release.json": "tsconfig",
        "eslint.config.base.ts": "eslint"
        {%- if frontend_style_framework == "tailwind" -%},"*.css": "tailwindcss"{%- endif -%}
    },

    "material-icon-theme.files.customClones":[
        {
            "name": "angular-ngsw-config",
            "base": "angular",
            "color": "deep-purple-400",
            "fileNames": [
                "ngsw-config.json"
            ]
        },
        {
            "name": "angular-ng-config",
            "base": "angular",
            "color": "deep-purple-400",
            "fileNames": [
                "ng-config.json"
            ]
        },
        {
            "name": "env-production",
            "base": "tune",
            "color": "red-500",
            "fileNames": [
                "_production.ts",
                ".env.production"
            ]
        },
        {
            "name": "env-development",
            "base": "tune",
            "color": "green-500",
            "fileNames": [
                "_development.ts",
                ".env.development"
            ]
        },
        {
            "name": "env-staging",
            "base": "tune",
            "color": "amber-500",
            "fileNames": [
                "_staging.ts",
                ".env.staging"
            ]
        },
        {
            "name": "env-local",
            "base": "tune",
            "color": "blue-500",
            "fileNames": [
                ".env.local"
            ]
        },
        {
            "name": "env-answers",
            "base": "tune",
            "color": "deep-purple-500",
            "fileNames": [
                ".env.answers"
            ]
        },
        {
            "name": "tera",
            "base": "terraform",
            "color": "blue-gray-500",
            "fileNames": [
                "default.tera"
            ]
        },
        {
            "name": "gel",
            "base": "database",
            "color": "yellow-700",
            "fileNames": [
                "default.gel"
            ]
        },
        {
            "name": "package-scripts",
            "base": "powershell",
            "color": "amber-700",
            "fileNames": [
                "scripts.yml"
                "scripts.yaml"
            ]
        }
    ],

    "material-icon-theme.folders.associations": {
        "rust": "rust",
        ".cargo": "rust",
        "dbschema": "database",
        "gel": "database",
        "postgres": "database",
        "wizard": "terraform"
    },

    "angular.enable-strict-mode-prompt": false,

    "files.exclude": {
      "dist": true,
      ".angular": true,
      ".copier-answers.yml": true
    },

    "files.associations": {
      ".prototools": "toml"
      {%- if frontend_style_framework == "tailwind" -%},"*.css": "tailwindcss"{%- endif -%}
    },

    "explorer.fileNesting.enabled": true,
    "explorer.fileNesting.expand": false,
    "explorer.fileNesting.patterns": {
      "*.component.ts": "${basename}.html, ${basename}.spec.ts, ${basename}.sass, ${basename}.scss, ${basename}.css, ${basename}.less, $(capture).stories.ts, $(capture).story.ts, $(capture).stories.mdx",
      "package.json": "*.code-workspace, .browserslist*, .circleci*, .commitlint*, .cspell*, .cursorrules, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .ls-lint.yml, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .shellcheckrc, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json*, bower.json, build.config.*, bun.lock, bun.lockb, bunfig.toml, colada.options.ts, commitlint*, crowdin*, cspell*, dangerfile*, dlint.json, dprint.json*, ec.config.*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nixpacks*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rolldown.config.*, rollup.config.*, rspack*, ruff.toml, sentry.*.config.ts, simple-git-hooks*, sonar-project.properties, stylelint*, tsdown.config.*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, wrangler.*, xo.config.*, yarn*, .syncpackrc.yml, .syncpackrc.yaml, angular.json, moon.yml, ng-config.json, ng-package.json, ngsw-config.json, version.ts, version.json, scripts.yml, .postcssrc.json, gel.toml, documentation.json, setup.test.ts",
      "docker-compose.yml": ".dockerignore, Dockerfile*",
      "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README-*, README_*, RELEASE_NOTES*, ROADMAP.MD, Readme-*, Readme_*, Release_Notes*, Roadmap.md, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme-*, readme_*, release_notes*, roadmap.md, security.md, sponsors*, DEVELOPMENT.md",
      ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .lfsconfig, .mailmap, .git-blame*",
      ".env": "*.env, .env.*, .envrc, env.d.ts, .prototools",
      "Cargo.toml": "Cargo.lock, rustfmt.toml, rust-toolchain.toml, cargo-recipe.json, moon.yml, clippy.toml"
    },

    "emmet.includeLanguages": {
      "postcss": "css"
      {%- if frontend_style_framework == 'tailwind' -%},"*.css": "tailwindcss"{%- endif -%}
    }
}
