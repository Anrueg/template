{% from "macros.jinja" import eslint_extensions, stylelint_extensions %}
$schema: "https://moonrepo.dev/schemas/tasks.json"
extends: file://../../../wizard/angular/tasks.yml

fileGroups:
  sources:
    - "**/*.{ts,tsx,json,sass,scss,css,yml}"

  configs:
    - moon.yml
    - ng-config.json
    - ngsw-config.json
    - package.json
    - tsconfig.json
    - tsconfig.*.json
    - version.json

tasks:
  clean:
    script: {{ frontend_toolchain }} rimraf dist/angular/$projectName && {{ frontend_toolchain }} ng cache clean
    options:
      runFromWorkspaceRoot: true
      cache: false

  lint:
    extends: eslint
    deps: ["~:stylelint"]
    options:
      internal: false

  format:
    extends: eslint.fix
    deps: ["~:stylelint.fix"]
    options:
      internal: false

  build:
    command: {{ frontend_toolchain }} ng build
    args:
      - $projectName
      - --configuration=$ENVIRONMENT
    toolchain: {{ frontend_toolchain }}
    deps:
      - "^:build"
      - "~:build.pre"
    inputs:
      - /angular/$projectName/**/*.{{ eslint_extensions() }}
      - /angular/$projectName/**/*.{{ stylelint_extensions() }}
    outputs:
      - /dist/angular/$projectName
      - /.angular
    options:
      runFromWorkspaceRoot: true
      runDepsInParallel: false

  build.pre:
    command: noop
    toolchain: {{ frontend_toolchain }}
    deps: [wizard:sync]
    options:
      internal: true

  start.pre:
    preset: server
    deps: [~:build.pre, wizard:watcher]
    options:
      internal: true

  {% if storybook -%}
  storybook:
    command: {{ frontend_toolchain }} ng run $projectName:storybook:$ENVIRONMENT
    toolchain: {{ frontend_toolchain }}
    preset: server
    deps:
      - ^:build
      - ^:start
      - ~:start.pre
    options:
      runFromWorkspaceRoot: true
      runDepsInParallel: false
  {% endif %}
