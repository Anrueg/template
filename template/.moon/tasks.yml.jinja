{%- from 'macros.jinja' import eslint_extensions, stylelint_extensions -%}
{%- set env_files = [".env.answers", ".env"] -%}
$schema: "https://moonrepo.dev/schemas/tasks.json"

taskOptions:
  windowsShell: pwsh
  inferInputs: true
  envFile:
    {%- for n in env_files %}
    - /{{ n }}
    {%- endfor %}

fileGroups:
  eslint:
    - "**/*.{{ eslint_extensions() }}"

  stylelint:
    - "**/*.{{ stylelint_extensions() }}"

  moon-utils:
    - /.moon/utils/**/*

tasks:
  runx:
    command: "$taskToolchain $workspaceRoot/.moon/utils/task-runner.ts"
    toolchain: "{{ frontend_toolchain }}"
    local: true
    options:
      interactive: true
      cache: false
      internal: true

  eslint:
    command:
      - eslint
      - --no-error-on-unmatched-pattern
      - --exit-on-fatal-error
      - --cache
      - --cache-location=$workspaceRoot/.moon/cache/.eslintcache
      - --no-warn-ignored
    args:
      - "@files(eslint)"
    inputs:
      - "@group(eslint)"
    toolchain: {{ frontend_toolchain }}
    options:
      internal: true

  eslint.fix:
    extends: eslint
    args:
      - --fix
      - --config=$workspaceRoot/eslint.config.format.ts
      # - --fix-type problem,suggestion,layout

  stylelint:
    command:
      - stylelint
      - --allow-empty-input
    args:
      - "@files(stylelint)"
    inputs:
      - "@group(stylelint)"
    toolchain: {{ frontend_toolchain }}
    options:
      mergeArgs: prepend
      internal: true

  stylelint.fix:
    extends: stylelint
    args:
      - --fix=strict
